{"version":3,"sources":["webpack:///./index.js","webpack:///./js/timer.js"],"names":["selector","targetDate","this","refs","timerContainerRef","document","querySelector","daysContent","hoursContent","minutesContent","secondsContent","makeTimer","startTime","getTime","setInterval","currentTime","Date","now","time","timer","getTimerComponents","updateContent","days","Math","floor","hours","mins","secs","textContent"],"mappings":"oHAAA,4B,mBCgDiB,I,WA7Cb,cAAsC,IAAxBA,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,WACpBC,KAAKF,SAAWA,EAChBE,KAAKD,WAAaA,EAClBC,KAAKC,KAAO,CACRC,kBAAoBC,SAASC,cAAT,GAA0BJ,KAAKF,UACnDO,YAAaF,SAASC,cAAT,uBACbE,aAAcH,SAASC,cAAT,wBACdG,eAAgBJ,SAASC,cAAT,uBAChBI,eAAgBL,SAASC,cAAT,wB,2BAIxBK,UAAA,WAAY,WAEHC,EAAYV,KAAKD,WAAWY,UACrCC,aAAY,WACT,IAAMC,EAAcC,KAAKC,MACnBC,EAAON,EAAYG,EACnBI,EAAQ,EAAKC,mBAAmBF,GACtC,EAAKG,cAAcF,KAGnB,M,EAIFC,mBAAA,SAAmBF,GAKpB,MAAQ,CAACI,KAJIC,KAAKC,MAAMN,EAAO,OAIhBO,MAHDF,KAAKC,MAAON,EAAO,MAAR,MAGHQ,KAFTH,KAAKC,MAAON,EAAO,KAAR,KAEIS,KADfJ,KAAKC,MAAON,EAAO,IAAe,O,EAK9CG,cAAA,YAA2C,IAA3BC,EAA2B,EAA3BA,KAAMG,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,KAAMC,EAAQ,EAARA,KAChCzB,KAAKC,KAAKI,YAAYqB,YAAtB,GAAuCN,EACvCpB,KAAKC,KAAKK,aAAaoB,YAAvB,GAAwCH,EACxCvB,KAAKC,KAAKM,eAAemB,YAAzB,GAA0CF,EAC1CxB,KAAKC,KAAKO,eAAekB,YAAzB,GAA0CD,G,KAMjC,CAAmB,CAClC3B,SAAU,WACVC,WAAY,IAAIe,KAAK,kBAGdL,c","file":"main.5d8b6a3415365bacf7d9.js","sourcesContent":["import './styles.scss';\nimport './js/timer.js';","\r\nclass CountdownTimer{\r\n\r\n    constructor({ selector, targetDate }) {\r\n        this.selector = selector;\r\n        this.targetDate = targetDate;\r\n        this.refs = {\r\n            timerContainerRef : document.querySelector(`${this.selector}`),\r\n            daysContent: document.querySelector(`[data-value=\"days\"]`),\r\n            hoursContent: document.querySelector(`[data-value=\"hours\"]`),\r\n            minutesContent: document.querySelector(`[data-value=\"mins\"]`),\r\n            secondsContent: document.querySelector(`[data-value=\"secs\"]`),\r\n              };\r\n    };\r\n     \r\n    makeTimer() {\r\n        \r\n       const startTime = this.targetDate.getTime();\r\n    setInterval(() => {\r\n       const currentTime = Date.now();\r\n       const time = startTime - currentTime;\r\n       const timer = this.getTimerComponents(time);\r\n       this.updateContent(timer);\r\n    \r\n    \r\n    }, 1000);\r\n   }\r\n    \r\n\r\n     getTimerComponents(time) {\r\n    const days = Math.floor(time / (1000 * 60 * 60 * 24));\r\n    const hours = Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n    const mins = Math.floor((time % (1000 * 60 * 60)) / (1000 * 60));\r\n    const secs = Math.floor((time % (1000 * 60)) / 1000);\r\n    return ({days, hours, mins, secs})\r\n\r\n    }\r\n\r\n     updateContent({ days, hours, mins, secs }) {\r\n        this.refs.daysContent.textContent = `${days}`;\r\n        this.refs.hoursContent.textContent = `${hours}`;\r\n        this.refs.minutesContent.textContent = `${mins}`;\r\n        this.refs.secondsContent.textContent = `${secs}`;\r\n    }\r\n};\r\n\r\n\r\n\r\nconst newTimer = new CountdownTimer({\r\n  selector: '#timer-1',\r\n  targetDate: new Date('Feb 15, 2021'),\r\n});\r\n\r\nnewTimer.makeTimer();\r\n\r\n\r\n\r\n"],"sourceRoot":""}